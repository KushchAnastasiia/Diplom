openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Medical API documentation"
tags:
  - name: "equipment"
    description: "CRUD equipment"
  - name: "user"
    description: "Operations about user"
servers:
  - url: http://localhost:8000
paths:
  /api/equipment/:
    get:
      tags:
        - equipment
      $ref: ./equipment/paths.yaml#/getAll
    post:
      tags:
        - equipment
      $ref: ./equipment/paths.yaml#/create
  /api/equipment/{id}:
    get:
      tags:
        - equipment
      $ref: ./equipment/paths.yaml#/getCurrent
    
  /api/auth/user/:
    get:
      tags:
        - "user"
      summary: "Get user data"
      description: "Get equipment list"
      x-swagger-router-controller: SampleController
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: "ok"
      security:
      - Token: []
  /api/auth/register/:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ""
      operationId: register
      produces:
        - application/json
      reduces:
        - application/json
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                email:
                  description: The user email
                  type: string
                  example: test@test.com
                username:
                  description: The user email
                  type: string
                  example: test
                password:
                  description: The user email
                  type: string
                  example: '123456'
              required:
                - username
                - password
      responses:
        "200":
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        "400":
          description: Invalid username/password supplied
components:
  securitySchemes:
    Token:
      description: "
      For accessing the API a valid token must be passed in all the queries in
      the 'Authorization' header.
      A valid token is generated by the API and returned as answer of a call
      to the route /login giving a valid user & password.
      The following syntax must be used in the 'Authorization' header :
                      Value: apiKey"
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Eqipment:
      $ref: './models.yaml#/Equipment'
    Manufacturer:
      $ref: './models.yaml#/Manufacturer'
    Country:
      $ref: './models.yaml#/Country'
    Type:
      $ref: './models.yaml#/Type'
    Group:
      $ref: './models.yaml#/Group'
    SubGroup:
      $ref: './models.yaml#/SubGroup'
    